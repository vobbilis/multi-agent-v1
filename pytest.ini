[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test categories
markers =
    unit: Unit tests
    integration: Integration tests
    slow: Tests that take longer to run
    dangerous: Tests that could modify system state

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test execution
addopts = 
    --verbose
    --strict-markers
    --tb=short
    --showlocals
    --color=yes
    --durations=10
    --maxfail=10
    --cov=k8s_analyzer
    --cov-report=term-missing
    --cov-report=html
    --cov-branch
    --no-cov-on-fail
    --junitxml=test-results/junit.xml
    --html=test-results/report.html

# Environment configuration
env =
    ENVIRONMENT=test
    KUBECONFIG=~/.kube/config
    KUBECTL_BINARY=/usr/local/bin/kubectl
    DEFAULT_NAMESPACE=default
    ALLOWED_NAMESPACES=default,kube-system
    RESTRICTED_RESOURCES=secrets,configmaps
    TOOL_TIMEOUT=30
    DRY_RUN=true
    DEBUG_MODE=true
    CACHE_TTL=300
    MAX_RETRIES=3
    RETRY_DELAY=1

# Test discovery
norecursedirs = 
    .git
    .tox
    .env
    .venv
    dist
    build
    __pycache__
    node_modules
    .pytest_cache
    .coverage
    htmlcov
    test-results

# Coverage configuration
[coverage:run]
branch = True
source = k8s_analyzer

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
    except ImportError:
    raise AssertionError

[coverage:html]
directory = test-results/coverage

# HTML report configuration
[pytest-html]
render_collapsed = True
self_contained = True
report_title = K8s Analyzer Test Report 